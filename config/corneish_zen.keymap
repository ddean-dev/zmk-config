#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define L_MAC 0
#define L_PC 1
#define L_MOD 2
#define L_PC_MOD 3
#define L_FN 4

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
    };
    keymap {
        compatible = "zmk,keymap";
        Mac {
            label = "Mac";
            // |   TAB   |    Q    |    W    |    E    |    R    |    T    |            |    Y    |    U    |    I    |    O    |    P    |  BSPC   |
            // |   ESC   |    A    |    S    |    D    |    F    |    G    |            |    H    |    J    |    K    |    L    |    '    | RETURN  |
            // |  LSHFT  |    Z    |    X    |    C    |    V    |    B    |            |    N    |    M    |    ,    |    .    |    /    |  ALTGR  |
            //                               |  LALT   |  LCTRL  |  SPACE  |            |  SPACE  |   Mod   |  L WIN  |
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp T                                   &kp Y &kp U &kp I &kp O &kp P &kp BSPC
                &kp ESCAPE &kp A &kp S &kp D &kp F &kp G                                &kp H &kp J &kp K &kp L &kp APOSTROPHE &kp ENTER
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B                                 &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RALT
                &kp LCTRL &kp LCMD &kp SPACE                                            &kp SPACE &mo L_MOD &kp LALT
            >;
        };
        PC {
            label = "PC";
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            //                               |  LCTRL  |  LCMD   |         |            |         |         |  LOPT   |
            bindings = <
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &kp LALT &kp LCTRL &trans                                               &trans &trans &kp LWIN
            >;
        };
        Mod {
            label = "Mod";
            // |         |    1    |    2    |    3    |    4    |    5    |            |  PG_UP  | L_WORD  |   UP    | R_WORD  |    \    |   DEL   |
            // |         |    6    |    7    |    8    |    9    |    0    |            | PG_DOWN |  LEFT   |  DOWN   |  RIGHT  |    ;    |         |
            // |         |    -    |    =    |    '    |    [    |    ]    |            |   INS   |  HOME   |         |   END   |         |         |
            //                               |         |         |         |            |         |         |         |
            bindings = <
                &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                               &kp PAGE_UP &kp LA(LEFT) &kp UP &kp LA(RIGHT) &kp BSLH &kp DEL
                &trans &kp N6 &kp N7 &kp N8 &kp N9 &kp N0                               &kp PAGE_DOWN &kp LEFT &kp DOWN &kp RIGHT &kp SEMI &trans
                &trans &kp MINUS &kp EQUAL &kp GRAVE &kp LBKT &kp RBKT                  &kp INS &kp LG(LEFT) &none &kp LG(RIGHT) &none &trans
                &trans &trans &trans                                                    &trans &trans &trans
            >;
        };
        PcMod {
            label = "Mod";
            // |         |         |         |         |         |         |            |         | L_WORD  |         | R_WORD  |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |  HOME   |   APP   |   END   |  SLCK   |         |
            //                               |         |         |         |            |         |         |         |
            bindings = <
                &trans &trans &trans &trans &trans &trans                               &trans &kp LC(LEFT) &trans &kp LC(RIGHT) &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &kp HOME &kp K_APP &kp END &kp SLCK &trans
                &trans &trans &trans                                                    &trans &trans &trans
            >;
        };
        Function {
            label = "Fn";
            // |         |    1    |    2    |    3    |    4    |    5    |            |    6    |    7    |    8    |    9    |    0    |         |
            // |         |  BT 4   |  BT 3   |  BT 2   |  BT 1   |         |            |    -    |    [    |    ]    |    `    |    ;    |         |
            // |         | BT CLR  |         | TO Mac  |  TO PC  |         |            |         |    =    |         |         |    \    |         |
            //                               |         |         |         |            |         |         |         |
            bindings = <
                &bt BT_SEL(0) &bt BT_SEL(1) &bt BT_SEL(2) &bt BT_SEL(3) &bt BT_SEL(4) &bt BT_CLR    &trans &trans &trans &trans &trans &trans
                &none &none &none &none &none &none                                                 &trans &trans &trans &trans &trans &trans
                &to L_MAC &to L_PC &none &none &none &none                                          &trans &trans &trans &trans &trans &trans
                &trans &trans &trans                                                                &trans &trans &trans
            >;
        };
        //&kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6
        //&kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
        // |   F7    |   F8    |   F9    |   F10   |   F11   |   F12   |
        // |   F1    |   F2    |   F3    |   F4    |   F5    |   F6    |
        NewLayer {
            label = "New";
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            //                               |         |         |         |            |         |         |         |
            bindings = <
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans                                                    &trans &trans &trans
            >;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_osl {
            timeout-ms = <50>;
            key-positions = <36 37 38>;
            bindings = <&sl L_FN>;
        };
    };
    conditional_layers {
        compatible = "zmk,conditional-layers";
        cl_pc_mod {
            if-layers = <L_PC L_MOD>;
            then-layer = <L_PC_MOD>;
        };
    };
};
