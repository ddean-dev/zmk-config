#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define L_PC 0
#define L_MAC 1
#define L_SYM 2
#define L_FN 3
#define L_FN_MAC 4

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};

/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    mac_fn {
      if-layers = <L_MAC L_FN>;
      then-layer = <L_FN_MAC>;
    };
  };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        PC {
            label = "PC";
            // |   TAB   |    Q    |    W    |    E    |    R    |    T    |            |    Y    |    U    |    I    |    O    |    P    |  BSPC   |
            // |   ESC   |    A    |    S    |    D    |    F    |    G    |            |    H    |    J    |    K    |    L    |    '    | RETURN  |
            // |  LSHFT  |    Z    |    X    |    C    |    V    |    B    |            |    N    |    M    |    ,    |    .    |    /    |  ALTGR  |
            //                               |   SYM   |  LALT   |  LCTRL  |            |  SPACE  |   FN   |  L WIN  |
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp T                                   &kp Y &kp U &kp I &kp O &kp P &kp BSPC
                &kp ESCAPE &kp A &kp S &kp D &kp F &kp G                                &kp H &kp J &kp K &kp L &kp APOSTROPHE &kp ENTER
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B                                 &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RALT
                &mo L_SYM &kp LALT &kp LCTRL                                            &kp SPACE &mo L_FN &kp LWIN
            >;
        };

        Mac {
            label = "Mac";
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            //                               |  LCTRL  |  LCMD   |         |            |         |         |  LOPT   |
            bindings = <
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &kp LCTRL &kp LCMD &trans                                               &trans &trans &kp LALT
            >;
        };

        Symbols {
            label = "Sym";
            // |         |    1    |    2    |    3    |    4    |    5    |            |    6    |    7    |    8    |    9    |    0    |         |
            // |         |  BT 4   |  BT 3   |  BT 2   |  BT 1   |         |            |    -    |    [    |    ]    |    `    |    ;    |         |
            // |         | BT CLR  |         | TO Mac  |  TO PC  |         |            |         |    =    |         |         |    \    |         |
            //                               |         |         |         |            |         |         |         |
            bindings = <
                &trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                               &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &trans
                &trans &bt BT_SEL(3) &bt BT_SEL(2) &bt BT_SEL(1) &bt BT_SEL(0) &none    &kp MINUS &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp APOS &kp SEMI &trans
                &trans &bt BT_CLR &none &to L_MAC &to L_PC &none                        &none &kp EQUAL &none &none &kp BSLH &trans
                &trans &trans &trans                                                    &trans &trans &trans
            >;
        };

        Func {
            label = "Func";
            // |   F7    |   F8    |   F9    |   F10   |   F11   |   F12   |            |  PG_UP  | L_WORD  |   UP    | R_WORD  |         |   DEL   |
            // |   F1    |   F2    |   F3    |   F4    |   F5    |   F6    |            | PG_DOWN |  LEFT   |  DOWN   |  RIGHT  |         |         |
            // |         | VOL DN  |  PREV   |  PLAY   |  NEXT   | VOL UP  |            |   INS   |  HOME   |   APP   |   END   | SCRLCK  |         |
            //                               |         |         |         |            |         |         |         |
            bindings = <
                &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12                            &kp PAGE_UP &kp LC(LEFT_ARROW) &kp UP_ARROW &kp LC(RIGHT_ARROW) &none &kp DEL
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6                               &kp PAGE_DOWN &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &none &trans
                &trans &kp C_VOL_DN &kp C_PREV &kp C_PP &kp C_NEXT &kp C_VOL_UP         &kp INS &kp HOME &kp K_APPLICATION &kp END &kp SCROLLLOCK &trans
                &trans &trans &trans                                                    &trans &trans &trans
            >;
        };

        MacFunc {
            label = "Func";
            // |         |         |         |         |         |         |            |         | L_WORD  |         | R_WORD  |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |  HOME   |         |   END   |         |         |
            //                               |         |         |         |            |         |         |         |
            bindings = <
                &trans &trans &trans &trans &trans &trans                               &trans &kp LA(LEFT_ARROW) &trans &kp LA(RIGHT_ARROW) &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &kp LG(LEFT_ARROW) &none &kp LG(RIGHT_ARROW) &none &trans
                &trans &trans &trans                                                    &trans &trans &trans
            >;
        };

        NewLayer {
            label = "New";
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            // |         |         |         |         |         |         |            |         |         |         |         |         |         |
            //                               |         |         |         |            |         |         |         |
            bindings = <
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans                               &trans &trans &trans &trans &trans &trans
                &trans &trans &trans                                                    &trans &trans &trans
            >;
        };
    };
};
