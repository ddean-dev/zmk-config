#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        PC {
            label = "PC";
            // |   TAB   |    Q    |    W    |    E    |    R    |    T    |            |    Y    |    U    |    I    |    O    |    P    |  BSPC   |
            // |   ESC   |    A    |    S    |    D    |    F    |    G    |            |    H    |    J    |    K    |    L    |    '    | RETURN  |
            // |  SHIFT  |    Z    |    X    |    C    |    V    |    B    |            |    N    |    M    |    ,    |    .    |    /    |  ALTGR  |
            //                               |  LALT   |  LCTRL  |  SPACE  |            |  SPACE  |   MO 1  |  L WIN  |
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp T                                   &kp Y &kp U &kp I &kp O &kp P &kp BSPC
                &kp ESCAPE &kp A &kp S &kp D &kp F &kp G                                &kp H &kp J &kp K &kp L &kp APOSTROPHE &kp ENTER
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B                                 &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RIGHT_ALT
                &kp LEFT_ALT &kp LCTRL &kp SPACE                                        &kp SPACE &mo 2 &kp LWIN
            >;
        };

        Mac {
            label = "Mac";
            // |   TAB   |    Q    |    W    |    E    |    R    |    T    |            |    Y    |    U    |    I    |    O    |    P    |  BSPC   |
            // |   ESC   |    A    |    S    |    D    |    F    |    G    |            |    H    |    J    |    K    |    L    |    '    | RETURN  |
            // |  SHIFT  |    Z    |    X    |    C    |    V    |    B    |            |    N    |    M    |    ,    |    .    |    /    |  ALTGR  |
            //                               |  LCTRL  |  LCMD   |  SPACE  |            |  SPACE  |   MO 1  |  L OPT  |
            bindings = <
                &kp TAB &kp Q &kp W &kp E &kp R &kp T                                   &kp Y &kp U &kp I &kp O &kp P &kp BSPC
                &kp ESCAPE &kp A &kp S &kp D &kp F &kp G                                &kp H &kp J &kp K &kp L &kp APOSTROPHE &kp ENTER
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B                                 &kp N &kp M &kp COMMA &kp DOT &kp FSLH &kp RIGHT_ALT
                &kp LCTRL &kp LCMD &kp SPACE                                            &kp SPACE &mo 3 &kp LALT
            >;
        };

        NumNav {
            label = "NumNav";
            // |   TAB   |    =    |    7    |    8    |    9    |    0    |            |  PG_UP  | L_WORD  |   UP    | R_WORD  |    \    |   DEL   |
            // |   ESC   |    -    |    4    |    5    |    6    |    [    |            | PG_DOWN |  LEFT   |  DOWN   |  RIGHT  |    ;    | RETURN  |
            // |  SHIFT  |    `    |    1    |    2    |    3    |    ]    |            |   INS   |  HOME   |   APP   |   END   | SCRLCK  |  ALTGR  |
            //                               |  LALT   |  LCTRL  |  SPACE  |            |  SPACE  |         |  FUNC   |
            bindings = <
                &trans &kp EQUAL &kp N7 &kp N8 &kp N9 &kp N0                            &kp PAGE_UP &kp LC(LEFT_ARROW) &kp UP_ARROW &kp LC(RIGHT_ARROW) &kp BACKSLASH &kp DEL
                &trans &kp MINUS &kp N4 &kp N5 &kp N6 &kp LEFT_BRACKET                  &kp PAGE_DOWN &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp SEMICOLON &trans
                &trans &kp GRAVE &kp N1 &kp N2 &kp N3 &kp RIGHT_BRACKET                 &kp INS &kp HOME &kp K_APPLICATION &kp END &kp SCROLLLOCK &trans
                &trans &trans &trans                                                    &trans &trans &mo 4
            >;
        };

        MacNumNav {
            label = "NumNav";
            // |   TAB   |    =    |    7    |    8    |    9    |    0    |            |  PG_UP  | L_WORD  |   UP    | R_WORD  |    \    |   DEL   |
            // |   ESC   |    -    |    4    |    5    |    6    |    [    |            | PG_DOWN |  LEFT   |  DOWN   |  RIGHT  |    ;    | RETURN  |
            // |  SHIFT  |    `    |    1    |    2    |    3    |    ]    |            |   INS   |  HOME   |   APP   |   END   | SCRLCK  |  ALTGR  |
            //                               |  LALT   |  LCTRL  |  SPACE  |            |  SPACE  |         |  FUNC   |
            bindings = <
                &trans &kp EQUAL &kp N7 &kp N8 &kp N9 &kp N0                            &kp PAGE_UP &kp LA(LEFT_ARROW) &kp UP_ARROW &kp LA(RIGHT_ARROW) &kp BACKSLASH &kp DEL
                &trans &kp MINUS &kp N4 &kp N5 &kp N6 &kp LEFT_BRACKET                  &kp PAGE_DOWN &kp LEFT_ARROW &kp DOWN_ARROW &kp RIGHT_ARROW &kp SEMICOLON &trans
                &trans &kp GRAVE &kp N1 &kp N2 &kp N3 &kp RIGHT_BRACKET                 &kp INS &kp LC(LEFT_ARROW) &kp K_APPLICATION &kp LC(RIGHT_ARROW) &kp SCROLLLOCK &trans
                &trans &trans &trans                                                    &trans &trans &mo 4
            >;
        };

        PCFunc {
            label = "Func";
            // |   F7    |   F8    |   F9    |   F10   |   F11   |   F12   |            |   F19   |   F20   |   F21   |   F22   |   F23   |   F24   |
            // |   F1    |   F2    |   F3    |   F4    |   F5    |   F6    |            |   F13   |   F14   |   F15   |   F16   |   F17   |   F18   |
            // |  SHIFT  | VOL DWN |  PREV   |  PLAY   |  NEXT   | VOL UP  |            | BT NXT  | BT PRV  | BT CLR  | TO Mac  |  TO PC  |  ALTGR  |
            //                               |  LALT   |  LCTRL  |  SPACE  |            |  SPACE  |         |         |
            bindings = <
                &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12                            &kp F19 &kp F20 &kp F21 &kp F22 &kp F23 &kp F24
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6                               &kp F13 &kp F14 &kp F15 &kp F16 &kp F17 &kp F18
                &trans &kp K_VOL_DOWN &kp K_PREV &kp K_PP &kp K_NEXT &kp K_VOL_UP       &bt BT_PRV &bt BT_NXT &bt BT_CLR &to 1 &to 0 &trans
                &trans &trans &trans                                                    &trans &trans &trans
            >;
        };
    };
};
