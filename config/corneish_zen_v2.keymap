/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    macros {
        left_word: left_word {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_CONTROL>,
                <&macro_tap>,
                <&kp LEFT_ARROW>,
                <&macro_release>,
                <&kp LCTRL>;
        };
        right_word: right_word {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT_ARROW>,
                <&macro_release>,
                <&kp LEFT_CONTROL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        QWERTY {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
    &kp TAB   &kp Q   &kp W         &kp E      &kp R      &kp T              &kp Y   &kp U         &kp I    &kp O           &kp P       &kp BSPC
 &kp ESCAPE   &kp A   &kp S         &kp D      &kp F      &kp G              &kp H   &kp J         &kp K    &kp L  &kp APOSTROPHE      &kp ENTER
  &kp LSHFT   &kp Z   &kp X         &kp C      &kp V      &kp B              &kp N   &kp M     &kp COMMA  &kp DOT        &kp FSLH  &kp RIGHT_ALT
                             &kp LEFT_ALT  &kp LCTRL  &kp SPACE          &kp SPACE   &mo 1  &kp LEFT_WIN
            >;
        };

        NumNav {
            bindings = <
 &trans  &kp EQUAL  &kp N7  &kp N8  &kp N9   &kp LEFT_BRACKET            &kp PAGE_UP      &left_word       &kp UP_ARROW      &right_word   &kp BACKSLASH  &kp DEL
 &trans  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp RIGHT_BRACKET          &kp PAGE_DOWN  &kp LEFT_ARROW     &kp DOWN_ARROW  &kp RIGHT_ARROW   &kp SEMICOLON   &trans
 &trans     &kp N0  &kp N1  &kp N2  &kp N3          &kp GRAVE                &kp INS        &kp HOME  &kp K_APPLICATION          &kp END  &kp SCROLLLOCK   &trans
                            &trans  &trans             &trans                 &trans          &trans              &mo 2
            >;
        };

        Func {
            bindings = <
  &kp F1             &kp F2      &kp F3            &kp F4      &kp F5           &kp F6              &kp F7        &kp F8        &kp F9       &kp F10       &kp F11  &kp F12
 &kp F13            &kp F14     &kp F15           &kp F16     &kp F17          &kp F18             &kp F19       &kp F20       &kp F21       &kp F22       &kp F23  &kp F24
  &trans  &kp K_VOLUME_DOWN  &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT  &kp K_VOLUME_UP          &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &trans
                                                   &trans      &trans           &trans              &trans        &trans        &trans
            >;
        };
    };
};
